{"version":3,"sources":["services/api/user.js","pages/login/Login.js","utils/user.js","utils/validations/user.js","pages/login/UserForm.js","pages/login/CreateUser.js","components/common/Navigation.js","utils/task.js","components/task/Task.js","services/api/task.js","components/task/TaskList.js","pages/home/Home.js","components/task/TaskForm.js","pages/home/EditTask.js","pages/home/CreateTask.js","pages/account/ChangePassword.js","pages/account/Profile.js","pages/account/Account.js","services/AppRouter.js","App.js","index.js"],"names":["require","config","getUsers","a","axios","get","process","console","log","login","username","password","res","data","createUser","user","post","cookies","Cookies","Login","props","handleChange","target","name","value","setState","e","preventDefault","state","length","myUser","set","_id","path","lastName","email","window","location","href","userFailed","Container","Row","className","Col","md","lg","Form","onSubmit","this","Group","controlId","Label","Control","type","required","onChange","Alert","variant","to","Button","Component","validateFieldsInputs","usernames","errors","includes","test","passwordConfirmation","validateFields","map","obj","UserForm","newErrors","newUser","Object","keys","noValidate","as","isInvalid","Feedback","CreateUser","createUserAPI","Navigation","logout","remove","Navbar","bg","expand","Toggle","aria-controls","Collapse","id","Nav","inline","onClick","datesOrdered","compareDates","dateA","dateB","dateStrA","getFullYear","getMonth","slice","getDate","dateStrB","Task","updateTask","task","deleteTask","finishTask","showImportance","nStars","importance","Array","apply","i","icon","faStar","title","description","duration","date","Date","due_date","faPen","faCheck","faTrashAlt","getTasksByUserId","sort","b","getTaskById","createTask","newTask","patch","delete","TasksList","confirm","tasks","filter","el","alert","tasksList","Table","responsive","striped","bordered","hover","scope","Home","TaskForm","handleNumbers","parseInt","onChangeDate","backHome","userId","registration_date","placeholder","Check","custom","label","checked","selected","dateFormat","minDate","textButton","EditTask","match","params","CreateTask","ChangePassword","toggleShowChangePassword","showChangaPassword","newPassword","confirmPassword","Profile","sm","Account","Tabs","defaultActiveKey","Tab","eventKey","AppRouter","basename","exact","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c749bf8.chunk.js","sourcesContent":["import axios from 'axios'\r\nrequire('dotenv').config();\r\n\r\nconst getUsers = async () => {\r\n    try{\r\n        const res = await axios.get(`${process.env.REACT_APP_API}/users`);\r\n    } catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nconst login = async(username, password) => {\r\n    try{\r\n        const res = await axios.get(`${process.env.REACT_APP_API}/users/login?username=${username}&password=${password}`);\r\n        return res.data;\r\n    } catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nconst createUser = async (user) => {\r\n    try{\r\n        const res= await axios.post(`${process.env.REACT_APP_API}/users/add`,user);\r\n        return res.data;\r\n    } catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport { getUsers, login, createUser } \r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { login } from '../../services/api/user'\r\n\r\nimport Cookies from 'universal-cookie'\r\nconst cookies = new Cookies();\r\n\r\nexport default class Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            userFailed: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(cookies.get('username')){\r\n            window.location.href=\"./home\";\r\n        }\r\n    }\r\n\r\n    handleChange = ({target}) => {\r\n        const {name, value} = target;\r\n        this.setState({[name]: value, userFailed: false});\r\n    }\r\n    \r\n    login = async (e) => {\r\n        e.preventDefault();\r\n        const { username, password} = this.state;\r\n        const data = await login(username, password);\r\n        \r\n        if(data.length === 1){\r\n            const myUser = data[0];\r\n            cookies.set('id',myUser._id, {path: \"/\"});\r\n            cookies.set('username',myUser.username, {path: \"/\"});\r\n            cookies.set('name',myUser.name, {path: \"/\"});\r\n            cookies.set('lastName',myUser.lastName, {path: \"/\"});\r\n            cookies.set('email',myUser.email, {path: \"/\"});\r\n            window.location.href=\"./home\";\r\n        }\r\n        else{\r\n            this.setState({userFailed: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col md=\"8\" lg=\"6\" className=\"my-4\">\r\n                        <h3>Login</h3>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col md=\"8\" lg=\"6\">\r\n                        <Form onSubmit={this.login}>\r\n                            <Form.Group controlId=\"usernameInput\">\r\n                                <Form.Label>Username</Form.Label>\r\n                                <Form.Control type=\"text\" required name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"passwordInput\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" required name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                            </Form.Group>\r\n                            {this.state.userFailed && <Alert variant={'danger'}>User and password don't match!</Alert>}\r\n                            <p>¿Don't have an account?<span> </span><Link to=\"./register-user\">Sign up</Link></p>\r\n                            <Button type=\"submit\">Enter</Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","const validateEmail = (email) => {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n}\r\n\r\nconst validateFieldsInputs = (user, usernames) => {\r\n    const errors = {};\r\n        if(!user.name) errors.name = \"What's your name?\";\r\n        if(!user.lastName) errors.lastName = \"What's your lastname?\";\r\n        if(!user.username || usernames.includes(user.username)) errors.username = \"This username is not available\";\r\n        if(!validateEmail(user.email)) errors.email = \"Enter an valid email\";\r\n        if(user.password.length < 8) errors.password = \"Your password must contain at least 8 letters\";\r\n        if(user.passwordConfirmation.length < 8) errors.passwordConfirmation = \"Your password must contain at least 8 letters\"\r\n        if(user.password !== user.passwordConfirmation) errors.passwordConfirmation = \"Passwords don't match\";\r\n        return errors;\r\n}\r\n\r\nexport { validateFieldsInputs }\r\n","import { getUsers } from '../../services/api/user'\r\nimport { validateFieldsInputs } from '../user'\r\n\r\n\r\nconst validateFields = async (user) => {\r\n    try{\r\n        const res = await getUsers();\r\n        const usernames = res.data.map( function(obj){ return obj[\"username\"] })\r\n        const errors = validateFieldsInputs(user, usernames);\r\n        return errors;\r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport { validateFields }","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { validateFields } from '../../utils/validations/user'\r\n\r\nexport default class UserForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            lastName: '',\r\n            email: '',\r\n            username: '',\r\n            password: '',            \r\n            passwordConfirmation: '',\r\n            errors: {\r\n                name: \"What's your name?\",\r\n                lastName: \"What's your lastname?\",\r\n                email: \"This username is not available\",\r\n                username: \"Enter an valid email\",\r\n                password: \"Your password must contain at least 8 letters\",\r\n                passwordConfirmation: \"Your password must contain at least 8 letters\",\r\n            }            \r\n        }\r\n    }\r\n\r\n    handleChange = ({target}) => {\r\n        const {name, value} = target;\r\n        this.setState({[name]: value});\r\n\r\n        const newErrors = this.state.errors;\r\n        newErrors[name] = '';\r\n        \r\n        this.setState({errors: newErrors});\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const {errors, ...newUser} = this.state;\r\n\r\n        const newErrors = await validateFields(newUser);\r\n\r\n        if(!Object.keys(newErrors).length){\r\n            this.props.createUser(newUser);\r\n        } \r\n        this.setState({errors: newErrors});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h3 className=\"my-4\">Create New User</h3>\r\n                <Form noValidate onSubmit={this.onSubmit}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} md=\"6\" controlId=\"nameInput\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type=\"text\" required name=\"name\" value={this.state.name} onChange={this.handleChange} isInvalid={this.state.errors.name}/>\r\n                            <Form.Control.Feedback type=\"invalid\">{this.state.errors.name}</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} md=\"6\" controlId=\"lastNameInput\">\r\n                            <Form.Label>Lastname</Form.Label>\r\n                            <Form.Control type=\"text\" required name=\"lastName\" value={this.state.lastName} onChange={this.handleChange} isInvalid={this.state.errors.lastName}/>\r\n                            <Form.Control.Feedback type=\"invalid\">{this.state.errors.lastName}</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Group controlId=\"emailInput\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" required name=\"email\" value={this.state.email} onChange={this.handleChange} isInvalid={this.state.errors.email}/>\r\n                        <Form.Control.Feedback type=\"invalid\">{this.state.errors.email}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"usernameInput\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control type=\"text\" required name=\"username\" value={this.state.username} onChange={this.handleChange} isInvalid={this.state.errors.username}/>\r\n                        <Form.Control.Feedback type=\"invalid\">{this.state.errors.username}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"passwordInput\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" required name=\"password\" value={this.state.password} onChange={this.handleChange} isInvalid={this.state.errors.password}/>\r\n                            <Form.Control.Feedback type=\"invalid\">{this.state.errors.password}</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"passwordConfirmationInput\">\r\n                            <Form.Label>Confirm password</Form.Label>\r\n                            <Form.Control type=\"password\" required name=\"passwordConfirmation\" value={this.state.passwordConfirmation} onChange={this.handleChange} isInvalid={this.state.errors.passwordConfirmation}/>\r\n                            <Form.Control.Feedback type=\"invalid\">{this.state.errors.passwordConfirmation}</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <p>¿Have an account?<span> </span>\r\n                        <Link to=\"./\">Log in</Link>\r\n                    </p>\r\n                    <Button type=\"submit\">Create User</Button>\r\n                </Form>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport UserForm from './UserForm'\r\n\r\nimport { createUser as createUserAPI } from '../../services/api/user'\r\n\r\nimport Cookies from 'universal-cookie'\r\nconst cookies = new Cookies();\r\n\r\nexport default class CreateUser extends Component {\r\n    componentDidMount() {\r\n        if(cookies.get('username')){\r\n            window.location.href=\"./home\";\r\n        }\r\n    }\r\n\r\n    createUser = (newUser)=>{\r\n        const {passwordConfirmation, ...user} = newUser;\r\n        const myUser = createUserAPI(user);\r\n        cookies.set('id',myUser._id, {path: \"/\"});\r\n        cookies.set('username',myUser.username, {path: \"/\"});\r\n        cookies.set('password',myUser.password, {path: \"/\"});\r\n        cookies.set('name',myUser.name, {path: \"/\"});\r\n        cookies.set('lastName',myUser.lastName, {path: \"/\"});\r\n        cookies.set('email',myUser.email, {path: \"/\"});\r\n        window.location.href=\"./home\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <UserForm createUser={this.createUser}/>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Cookies from 'universal-cookie'\r\nconst cookies = new Cookies();\r\n\r\nexport default class Navigation extends Component {\r\n\r\n    logout = (e) => {\r\n        e.preventDefault();\r\n        cookies.remove('id', {path: \"/\"});\r\n        cookies.remove('username', {path: \"/\"});\r\n        cookies.remove('name', {path: \"/\"});\r\n        cookies.remove('lastName', {path: \"/\"});\r\n        cookies.remove('email', {path: \"/\"});\r\n        window.location.href=\"./\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" className=\"mb-4\">\r\n                    <Container>\r\n                        <Link to=\"/home\" className=\"navbar-brand\">Organizer</Link>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto\">\r\n                                        <Link to=\"/home\" className=\"nav-link\">Tasks</Link>\r\n                                        <Link to=\"/home/create\" className=\"nav-link\">Create Task</Link>\r\n                                        <Link to=\"/home/account\" className=\"nav-link\">My Account</Link>\r\n                            </Nav>\r\n                            <Form inline>\r\n                                <Button variant=\"secondary\" onClick={this.logout}>Log out</Button>\r\n                            </Form>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","let datesOrdered = 0;\r\n\r\nconst sortingTasks = (tasks) => {\r\n    tasks.sort((a, b) => {\r\n        compareDates(new Date(a.due_date), new Date(b.due_date));\r\n        if(datesOrdered !== 0) return datesOrdered;\r\n        //Both have the same due_date\r\n        if(a.importance > b.importance) return -1;\r\n        if(a.importance < b.importance) return 1;\r\n        return 0;\r\n    })\r\n}\r\n\r\nconst compareDates = (dateA, dateB) => {\r\n    const dateStrA = dateA.getFullYear() + \"-\" + (\"0\"+(dateA.getMonth()+1)).slice(-2) + \"-\" + (\"0\" + dateA.getDate()).slice(-2);\r\n    const dateStrB = dateB.getFullYear() + \"-\" + (\"0\"+(dateB.getMonth()+1)).slice(-2) + \"-\" + (\"0\" + dateB.getDate()).slice(-2);\r\n    if(dateStrA < dateStrB) datesOrdered = -1;\r\n    else if(dateStrA > dateStrB) datesOrdered = 1;\r\n    else datesOrdered = 0;\r\n}\r\n\r\nconst showDateAsString = (date) => {\r\n    return (\"0\" + date.getDate()).slice(-2) + \"-\" + (\"0\"+(date.getMonth()+1)).slice(-2) + \"-\" + date.getFullYear();\r\n}\r\n\r\nexport { sortingTasks, showDateAsString }\r\n","import React, { Component } from 'react'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck, faTrashAlt, faPen, faStar } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { showDateAsString } from '../../utils/task'\r\n\r\nexport default class Task extends Component {\r\n    updateTask = () => {\r\n        this.props.updateTask(this.props.task._id);\r\n    }\r\n\r\n    deleteTask = () => {\r\n        this.props.deleteTask(this.props.task._id);\r\n    }\r\n    \r\n    finishTask = () => {\r\n        this.props.finishTask(this.props.task._id);\r\n    }\r\n    \r\n    showImportance = () => {\r\n        const nStars = this.props.task.importance;\r\n        return Array.apply(null, Array(nStars)).map((e,i) => {\r\n            return <FontAwesomeIcon key={i} icon={faStar} />\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{this.props.task.title}</td>\r\n                <td>{this.props.task.description}</td>\r\n                <td>{this.props.task.duration}</td>\r\n                <td>{this.showImportance()}</td>\r\n                <td>{showDateAsString(new Date(this.props.task.due_date))}</td>\r\n                <td>\r\n                    <FontAwesomeIcon key={1} onClick={this.updateTask} icon={faPen} className=\"mr-3\"/>\r\n                    <FontAwesomeIcon key={2} onClick={this.finishTask} icon={faCheck} className=\"mr-3\"/>\r\n                    <FontAwesomeIcon key={3} onClick={this.deleteTask} icon={faTrashAlt} />\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n","import { sortingTasks } from '../../utils/task'\r\n\r\nimport axios from 'axios'\r\nrequire('dotenv').config();\r\n\r\nconst getTasksByUserId = async (id) => {\r\n    try{\r\n        const res = await axios.get(`${process.env.REACT_APP_API}/tasks/${id}`);\r\n        if(res.data.length > 0){\r\n            sortingTasks(res.data);\r\n            return res.data;\r\n        }\r\n        return [];\r\n    } catch(e){\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nconst getTaskById = async (id) => {\r\n    try{\r\n        const res = await axios.get(`${process.env.REACT_APP_API}/tasks/byId/${id}`);\r\n        return res.data;\r\n    } catch(e){\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nconst createTask = async (newTask) => {\r\n    try{\r\n        const res = await axios.post(`${process.env.REACT_APP_API}/tasks/add`,newTask);\r\n    } catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nconst updateTask = async (newTask) => {\r\n    try{\r\n        const res = await axios.patch(`${process.env.REACT_APP_API}/tasks/${newTask.id}`,newTask);\r\n    } catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nconst deleteTask = async (id) => {\r\n    try{\r\n        const res = await axios.delete(`${process.env.REACT_APP_API}/tasks/${id}`);\r\n    } catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport { getTasksByUserId, getTaskById, createTask, updateTask, deleteTask }\r\n","import React, { Component } from 'react'\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Task from './Task'\r\n\r\nimport { getTasksByUserId, deleteTask } from '../../services/api/task'\r\n\r\nimport Cookies from 'universal-cookie'\r\nconst cookies = new Cookies();\r\n\r\nexport default class TasksList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            tasks: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        if(!cookies.get('username')){\r\n            window.location.href=\"./\";\r\n        }\r\n        else{\r\n            const tasks = await getTasksByUserId(cookies.get('id'));\r\n            this.setState({tasks: tasks});\r\n        }\r\n    }\r\n    \r\n    deleteTask = async (id) => {\r\n        const ans = window.confirm('Are you sure you want to delete this task?');\r\n        if(ans){\r\n            const res = await deleteTask(id);\r\n            this.setState({tasks: this.state.tasks.filter(el => el._id !== id)})\r\n            alert('Task deleted!');\r\n        }\r\n    }\r\n    \r\n    finishTask = async (id) => {\r\n        const ans = window.confirm('Are you sure you want complete this task?');\r\n        if(ans){\r\n            const res = await deleteTask(id);\r\n            this.setState({tasks: this.state.tasks.filter(el => el._id !== id)})\r\n            alert('Task completed!');\r\n        }\r\n    }\r\n\r\n    updateTask = (id) => {\r\n        window.location.href='./home/edit/'+id;\r\n    }\r\n\r\n    tasksList = () => {\r\n        return this.state.tasks.map(task => {\r\n            return <Task task={task} deleteTask={this.deleteTask} updateTask={this.updateTask} finishTask={this.finishTask} key={task._id}/>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Table responsive=\"sm\" striped bordered hover>\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th scope=\"col\">Title</th>\r\n                            <th scope=\"col\">Description</th>\r\n                            <th scope=\"col\">Time</th>\r\n                            <th scope=\"col\">Imp</th>\r\n                            <th scope=\"col\">Due Date</th>\r\n                            <th scope=\"col\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                        <tbody>\r\n                            {this.tasksList()}\r\n                        </tbody>\r\n                </Table>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport Navigation from '../../components/common/Navigation'\r\nimport TasksList from '../../components/task/TaskList'\r\n\r\nimport Cookies from 'universal-cookie'\r\nconst cookies = new Cookies();\r\n\r\nexport default class Home extends Component {\r\n    componentDidMount() {\r\n        if(!cookies.get('username')){\r\n            window.location.href=\"/organizer\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navigation />\r\n                <TasksList />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Navigation from '../common/Navigation'\r\n\r\nimport { getTaskById } from '../../services/api/task'\r\n\r\nimport Cookies from 'universal-cookie';\r\nconst cookies = new Cookies();\r\n\r\nexport default class TaskForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userId: '',\r\n            title: '',\r\n            description: '',\r\n            duration: 60,\r\n            importance: 1,\r\n            registration_date: new Date(),\r\n            due_date: new Date()\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if(!cookies.get('username')){\r\n            window.location.href=\"./\";\r\n        }\r\n        if(this.props.id){\r\n            const task = await getTaskById(this.props.id);\r\n            const {_id, title, description, duration, importance} = task;\r\n            const due_date = new Date(task.due_date);\r\n            this.setState({_id:_id, title: title, description: description, duration: duration, importance: importance, due_date: due_date});\r\n        }\r\n    }\r\n\r\n    handleChange = ({target}) => {\r\n        let {name, value} = target;\r\n        if(typeof this.state[name] === 'number') value = this.handleNumbers(name, value);\r\n        this.setState({[name]: value});\r\n    }\r\n    \r\n    handleNumbers = (name, value) => {\r\n        if (name === \"duration\" && value === \"\") value = parseInt(0); \r\n        else value = parseInt(value);\r\n        return value;\r\n    }\r\n\r\n    onChangeDate = (date)=>{\r\n        this.setState({due_date: date});\r\n    }\r\n\r\n    backHome = ()=>{\r\n        console.log(window.location.href);\r\n        window.location.href=\"../../home\";\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const newTask = {\r\n            userId: cookies.get('id'),\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n            duration: this.state.duration,\r\n            importance: this.state.importance,\r\n            due_date: this.state.due_date\r\n        };\r\n        if(this.state._id) newTask.id = this.state._id;\r\n        this.props.onSubmit(newTask);\r\n    }\r\n\r\n    render() {\r\n        const state = this.state;\r\n        return (\r\n            <>\r\n                <Navigation />\r\n                <Container>\r\n                    <Form onSubmit={this.onSubmit}>\r\n                        <Form.Group controlId=\"nameInput\">\r\n                            <Form.Label>Title</Form.Label>\r\n                            <Form.Control type=\"text\" required name=\"title\" placeholder=\"Eg. Became a Brawl Stars master\" value={state.title} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"descriptionInput\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control type=\"text\" required name=\"description\" placeholder=\"Eg. Watch all Yde's videos\" value={state.description} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n                        <Row>\r\n                            <Form.Group as={Col} controlId=\"durationInput\" md=\"6\">\r\n                                <Form.Label>Duration (in minutes)</Form.Label>\r\n                                <Form.Control type=\"text\" required name=\"duration\" placeholder=\"60\" value={state.duration} onChange={this.handleChange} />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"importanceRadios\" md=\"6\">\r\n                                <Form.Label className=\"mb-3\">Importance</Form.Label>\r\n                                <div key=\"importanceRadios\">\r\n                                    <Form.Check custom inline type=\"radio\" name=\"importance\" id=\"importanceRadios-1\" label=\"Low\" value=\"1\" checked={state.importance === 1} onChange={this.handleChange}/>\r\n                                    <Form.Check custom inline type=\"radio\" name=\"importance\" id=\"importanceRadios-2\" label=\"Medium\" value=\"2\" checked={state.importance === 2} onChange={this.handleChange}/>\r\n                                    <Form.Check custom inline type=\"radio\" name=\"importance\" id=\"importanceRadios-3\" label=\"High\" value=\"3\" checked={state.importance === 3} onChange={this.handleChange}/>\r\n                                </div>\r\n                            </Form.Group>\r\n                        </Row>\r\n                            <Form.Group controlId=\"dueDateInput\">\r\n                                <Form.Label>Due Date</Form.Label>\r\n                                <div className=\"mb-5\">\r\n                                    <DatePicker className=\"py-1 px-2\" name=\"due_date\" selected={state.due_date} onChange={this.onChangeDate} dateFormat=\"dd/MM/yyyy\" minDate={new Date()} />\r\n                                </div>\r\n                            </Form.Group>\r\n                            <Button className=\"mr-2\" onClick={this.backHome}>Back</Button>\r\n                            <Button type=\"submit\">{this.props.textButton}</Button>\r\n                    </Form>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport TaskForm from '../../components/task/TaskForm'\r\n\r\nimport { updateTask } from '../../services/api/task'\r\n\r\nimport Cookies from 'universal-cookie'\r\nconst cookies = new Cookies();\r\n\r\nexport default class EditTask extends Component {\r\n    componentDidMount() {\r\n        if(!cookies.get('username')){\r\n            window.location.href=\"./\";\r\n        }\r\n    }\r\n\r\n    updateTask = async (newTask) => {\r\n        const res = await updateTask(newTask);\r\n        window.location.href=\"../../home\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <TaskForm onSubmit={this.updateTask} textButton={\"Update\"} id={this.props.match.params.id}/>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport TaskForm from \"../../components/task/TaskForm\"\r\n\r\nimport { createTask } from '../../services/api/task'\r\n\r\nimport Cookies from 'universal-cookie';\r\nconst cookies = new Cookies();\r\n\r\nexport default class CreateTask extends Component {\r\n    componentDidMount() {\r\n        if(!cookies.get('username')){\r\n            window.location.href=\"./\";\r\n        }\r\n    }\r\n    createTask = async (newTask) => {\r\n        const res = await createTask(newTask);\r\n        window.location.href=\"../home\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <TaskForm onSubmit={this.createTask} textButton={\"Create\"} title={\"Create Task\"}/>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nexport default class ChangePassword extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            password: \"\",\r\n            newPassword: \"\",\r\n            confirmPassword: \"\",\r\n            showChangaPassword: false\r\n        }\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        console.log('UPDATING PASSWORD');\r\n    }\r\n\r\n    handleChange = ({target}) => {\r\n        const {name, value} = target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    toggleShowChangePassword = () => {\r\n        this.setState({showChangaPassword: !this.state.showChangaPassword});\r\n    } \r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"mt-4\">\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <Form.Group controlId=\"passwordInput\">\r\n                        <Form.Label>Your Password</Form.Label>\r\n                        <Form.Control type=\"password\" required name=\"password\" placeholder=\"You're actual password\" value={this.state.password} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"newPasswordInput\">\r\n                        <Form.Label>New Password</Form.Label>\r\n                        <Form.Control type=\"password\" required name=\"newPassword\" placeholder=\"You're new password\" value={this.state.newPassword} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"confirmPasswordInput\">\r\n                        <Form.Label>Confirm your Password</Form.Label>\r\n                        <Form.Control type=\"password\" required name=\"confirmPassword\" placeholder=\"Confirm your password\" value={this.state.confirmPassword} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n                </Form>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport Cookies from 'universal-cookie'\r\nrequire('dotenv').config();\r\n\r\nexport default class Profile extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            newPassword: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        console.log('UPDATING DATA');\r\n    }\r\n\r\n    handleChange = ({target}) => {\r\n        const {name, value} = target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"mt-4\">\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} sm=\"6\" controlId=\"nameInput\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type=\"text\" required name=\"name\" placeholder=\"You're name\" value={this.state.name} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} sm=\"6\" controlId=\"lastNameInput\">\r\n                            <Form.Label>Last name</Form.Label>\r\n                            <Form.Control type=\"text\" required name=\"lastName\" placeholder=\"My last name\" value={this.state.lastName} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Group controlId=\"emailInput\" className=\"mb-4\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" required name=\"email\" placeholder=\"myemail@gmail.com\" value={this.state.email} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n                </Form>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Navigation from '../../components/common/Navigation'\r\nimport ChangePassword from './ChangePassword'\r\nimport Profile from './Profile'\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\n\r\nexport default class Account extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navigation/>\r\n                <Container>\r\n                    <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n                        <Tab eventKey=\"profile\" title=\"Profile\">\r\n                            <Profile/>\r\n                        </Tab>\r\n                        <Tab eventKey=\"security\" title=\"Security\">\r\n                            <ChangePassword/>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\n\r\nimport Login from '../pages/login/Login'\r\nimport CreateUser from '../pages/login/CreateUser'\r\nimport Home from '../pages/home/Home'\r\nimport EditTask from '../pages/home/EditTask'\r\nimport CreateTask from '../pages/home/CreateTask'\r\nimport Account from '../pages/account/Account'\r\n\r\nexport default class AppRouter extends Component {\r\n  render() {\r\n    return (\r\n      <Router basename=\"/organizer\">\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Login} />\r\n          <Route path=\"/home\" exact component={Home} />\r\n          <Route path=\"/home/edit/:id\" exact component={EditTask} />\r\n          <Route path=\"/home/create\" exact component={CreateTask} />\r\n          <Route path=\"/home/account\" exact component={Account} />\r\n          <Route path=\"/register-user\" component={CreateUser} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport AppRouter from './services/AppRouter'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <AppRouter/>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}